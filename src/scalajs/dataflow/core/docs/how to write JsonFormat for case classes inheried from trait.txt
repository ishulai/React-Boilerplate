  trait AkkaJsonSupport extends JsonSupport with Component.AkkaJsonSupport with SprayJsonSupport with DefaultJsonProtocol {
    implicit object connectionParamsFormat extends RootJsonFormat[ConnectionParams] {
      def write(cp: ConnectionParams) = cp match {
        case dbcp: DbConnectionParams => dbcp.toJson
        case ufcp: UnstructuredFileConnectionParams => ufcp.toJson
        case fcp: FileConnectionParams => fcp.toJson
        case ccp: CloudConnectionParams => ccp.toJson
      }

      def read(value: JsValue) = {
        val key = value.asJsObject.fields.keys.toSeq.head
        if (!key.isEmpty) {
          val obj = value.asJsObject.getFields(key)(0)
          key match {
            case "DbConnectionParams" => obj.convertTo[DbConnectionParams]
            case "UnstructuredFileConnectionParams" => obj.convertTo[UnstructuredFileConnectionParams]
            case "FileConnectionParams" => obj.convertTo[FileConnectionParams]
            case "CloudConnectionParams" => obj.convertTo[CloudConnectionParams]
          }
        }
        else null
      }
    }
