@startuml

class ComponentRegistry {
    categories: Seq[Category]
    find(categoryId: String): Category
    findComponent(categoryId: String, componentId: String): Component
    all(): Seq[Component]
    getCategoryId(componentId: String): String
}

ComponentRegistry "1"*--"many" Category: contains

class Category {
    id: String
    label: String
    components: Seq[Component]
    all(): Seq[Component]
    find(componentId: String): Component
    findComponent(categoryId: String, componentId: String): Component
    getCategoryId(componentId: String): String
}

Category "1"*--"many" Component: contains

class Component {
    id: String
    interfaceDesc: UISpec
    jarDesc: JarSpec
}

Component --> UISpec
Component --> JarSpec

class UISpec {
    toolboxDesc: ToolboxSpec
    vertexDesc: VertexSpec
    isScript: Boolean
    jarSpec: JarSpec
    script: ScriptSpec
}

UISpec --> ToolboxSpec
UISpec --> VertexSpec
UISpec --> ScriptSpec

class ToolboxSpec {
    label: String
    icon: String
}

class ScriptSpec {
    scriptFile: String
    className: String
    empty(): ScriptSpec
}

class VertexSpec {
    inPorts: Seq[PortSpec]
    outPorts: Seq[PortSpec]
    empty(): VertexSpec
}

VertexSpec "1"*--"many" PortSpec: contains

class PortSpec {
    name: String
    icon: String
    multiConnection: Boolean
}

class JarSpec {
    classPath: String
    packageName: String
    className: String
    qualifiedName(): String
    empty(): JarSpec
}

@enduml